---
import BaseHead from "../components/BaseHead.astro"
import ArticleHero from "../components/ArticleHero.astro"
import AppBar from "../components/AppBar"
import AppDrawer from "../components/AppDrawer"
import Component from "../components/Component"
import Theme from "../components/Theme"

const key = process.env.TOKEN
const cacheBuster = new Date().getMilliseconds()
const {story} = await fetch(`https://api.storyblok.com/v2/cdn/stories/settings?token=${key}&version=draft&cv=${cacheBuster}`)
  .then(response => response.json())
const global = story.content

const { page, content } = Astro.props
const El = typeof content === "object" ? "article" : "main"
const pageString = JSON.stringify(page)
const clientScript = (component, module = false) => {
  const c = component.toLowerCase()
  const type = module ? "module" : "application/javascript"
  if (pageString && pageString.includes(`"component":"${component}"`)) {
    return (
      <script src={Astro.resolve(`../js/${c}.js`)} inline type={type}></script>
    )
  }
}
---
<html lang="en">

  <head>
    <BaseHead global={ global } page={ page } content={content}/>
    <style lang="scss" global>
      @import "../css/base.scss";
    </style>
    <Theme global={ global }/>
  </head>

  <body class={ process.env.npm_lifecycle_script }>

    <AppDrawer global={ global }/>
    <AppBar global={ global }/>
    
    <El>
      {El === "article" && <ArticleHero content={content} />}
      <slot/>
      {El === "article" && global.blog_footer.map(content => (
        <Component blok={ content }/>
      ))}
    </El>

    {global.footer.map(content => (
      <Component blok={ content }/>
    ))}

    <!-- Load Images -->
    <script src={Astro.resolve("../js/images.js")} inline></script>

    <!-- Activate the Drawer -->
    <script type="module" src={Astro.resolve("../js/drawer.js")} inline></script>

    <!-- Component Scripts -->
    { clientScript("Dialog", true) }
    { clientScript("Form") }
    { clientScript("Tabs") }
    { clientScript("Video") }

    <!-- Deferred Crap like Fonts -->
    { global.custom_html }

    <!-- Settings Redirect -->
    <script>
      if (window.location.pathname === "/settings") {
        window.location.replace("http://localhost:3000")
      }
    </script>

  </body>

</html>

