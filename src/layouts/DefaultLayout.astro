---
import BaseHead from '../components/BaseHead.astro';
import AppBar from '../components/AppBar';
import AppDrawer from '../components/AppDrawer';
import Component from '../components/Component'
import Theme from '../components/Theme'

const { title, description } = Astro.props;
const key = "BZX4R4Dr8Y6rnegRb9YaPwtt"
const cacheBuster = new Date().getMilliseconds()
const { story } = await fetch(`https://api.storyblok.com/v2/cdn/stories/settings?token=${key}&cv=${cacheBuster}`)
  .then(response => response.json());
const global = story.content
---
<html lang="en">

  <head>
    <BaseHead title={ title } description={ description }/>
    <style lang="scss" global>
      @import "../css/base.scss";
    </style>
    <Theme global={ global }/>
  </head>

  <body class={ process.env.npm_lifecycle_script }>

    <AppDrawer global={ global }/>
    <AppBar global={ global }/>
    
    <main>
      <div class="grid">
        <slot/>
      </div>
    </main>

    {global.footer.map(content => (
      <Component blok={ content }/>
    ))}

    <!-- Load Images -->
    <script>
      const imgs = document.querySelectorAll(".image img")
      imgs.forEach(img => {
        let src = img.dataset.src
        let width = Math.round(img.clientWidth * devicePixelRatio)
        let height = Math.round(img.clientHeight * devicePixelRatio)
        src = src.replace('width', width).replace('height', height)
        img.src = src
        img.addEventListener('load', () => {
          img.parentElement.classList.remove('loading')
        })
      })
    </script>

    <!-- Activate the Drawer -->
    <script type="module" >
      import { lock, unlock } from "https://unpkg.com/tua-body-scroll-lock@1.2.1/dist/tua-bsl.esm.browser.min.js"
      let drawerButton = document.querySelector(".app-bar > .button:first-child")
      let drawer = document.querySelector(".app-drawer")
      let drawerScrim = document.querySelector(".app-drawer__scrim")

      drawerButton.addEventListener("click", () => {
        drawer.style.display = "block"
        drawerScrim.style.display = "block"
        setTimeout(() => {
          drawer.classList.add("app-drawer--open")
          drawerScrim.classList.add("app-drawer__scrim--open")
        })
        lock()
      })

      drawerScrim.addEventListener("click", () => {
        drawer.classList.remove("app-drawer--open")
        drawerScrim.classList.remove("app-drawer__scrim--open")
        setTimeout(() => {
          drawer.style.display = "none"
          drawerScrim.style.display = "none"
        }, 500)
        unlock()
      })
    </script>

    <script>
      if (window.location.pathname === "/settings") {
        window.location.replace("http://localhost:3000")
      }
    </script>

    <!-- Deferred Crap like Fonts -->
    { global.custom_html }

  </body>

</html>

